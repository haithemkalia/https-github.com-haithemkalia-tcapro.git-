/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/custom.js":
/*!*****************************!*\
  !*** ./static/js/custom.js ***!
  \*****************************/
/***/ (() => {

eval("{// Custom JavaScript for TCA Visa Tracking System\n\n// Show loading spinner\nfunction showLoading() {\n  document.getElementById('loadingOverlay').style.display = 'block';\n  document.getElementById('loadingSpinner').style.display = 'block';\n}\n\n// Hide loading spinner\nfunction hideLoading() {\n  document.getElementById('loadingOverlay').style.display = 'none';\n  document.getElementById('loadingSpinner').style.display = 'none';\n}\n\n// Auto-hide alerts after 5 seconds\ndocument.addEventListener('DOMContentLoaded', function () {\n  var alerts = document.querySelectorAll('.alert');\n  alerts.forEach(function (alert) {\n    setTimeout(function () {\n      if (typeof bootstrap !== 'undefined') {\n        var bsAlert = new bootstrap.Alert(alert);\n        bsAlert.close();\n      }\n    }, 5000);\n  });\n\n  // Add fade-in animation to content\n  var contentArea = document.querySelector('.content-area');\n  if (contentArea) {\n    contentArea.classList.add('fade-in-up');\n  }\n});\n\n// Confirm delete actions\nfunction confirmDelete(message) {\n  return confirm(message || 'هل أنت متأكد من الحذف؟');\n}\n\n// Fonction optimisée pour mettre à jour le statut d'un client via AJAX\nvar updateStatusInProgress = false; // Éviter les appels multiples\n\nfunction updateStatus(clientId, newStatus) {\n  if (!clientId || !newStatus) {\n    console.error('❌ ID client ou statut manquant');\n    return;\n  }\n\n  // Éviter les appels multiples simultanés\n  if (updateStatusInProgress) {\n    console.warn('⚠️ Mise à jour en cours, veuillez patienter');\n    return;\n  }\n  updateStatusInProgress = true;\n\n  // Afficher le loader\n  showLoading();\n\n  // Envoyer la requête AJAX avec timeout\n  var controller = new AbortController();\n  var timeoutId = setTimeout(function () {\n    return controller.abort();\n  }, 10000); // 10 secondes timeout\n\n  fetch('/api/update-status', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      client_id: clientId,\n      status: newStatus\n    }),\n    signal: controller.signal\n  }).then(function (response) {\n    clearTimeout(timeoutId);\n    if (!response.ok) {\n      throw new Error(\"HTTP error! status: \".concat(response.status));\n    }\n    return response.json();\n  }).then(function (data) {\n    updateStatusInProgress = false;\n    hideLoading();\n    if (data.success) {\n      // Mettre à jour l'affichage du statut sans recharger la page\n      var statusElement = document.querySelector(\"[data-client-id=\\\"\".concat(clientId, \"\\\"] .status-badge\"));\n      if (statusElement) {\n        statusElement.textContent = newStatus;\n        statusElement.className = \"btn status-badge status-\".concat(newStatus.replace(' ', '-'), \" dropdown-toggle\");\n      }\n\n      // Afficher un message de succès\n      showAlert('تم تحديث الحالة بنجاح! ✅', 'success');\n\n      // Ne plus recharger automatiquement la page pour améliorer les performances\n    } else {\n      showAlert('خطأ في تحديث الحالة: ' + (data.message || 'خطأ غير معروف'), 'error');\n    }\n  })[\"catch\"](function (error) {\n    updateStatusInProgress = false;\n    hideLoading();\n    if (error.name === 'AbortError') {\n      showAlert('انتهت مهلة الطلب، يرجى المحاولة مرة أخرى', 'error');\n    } else {\n      console.error('❌ Erreur lors de la mise à jour:', error);\n      showAlert('خطأ في الاتصال بالخادم', 'error');\n    }\n  });\n}\n\n// Form validation helpers\nfunction validateForm(formId) {\n  var form = document.getElementById(formId);\n  if (!form) return false;\n  var requiredFields = form.querySelectorAll('[required]');\n  var isValid = true;\n  requiredFields.forEach(function (field) {\n    if (!field.value.trim()) {\n      field.classList.add('is-invalid');\n      isValid = false;\n    } else {\n      field.classList.remove('is-invalid');\n    }\n  });\n  return isValid;\n}\n\n// Validation et formatage optimisé du numéro WhatsApp\nvar WHATSAPP_REGEX = /^216\\d{8}$/; // Regex compilée une seule fois\nvar TUNISIA_PREFIX = '216';\nfunction validateAndFormatWhatsApp(input) {\n  if (!input || typeof input !== 'string') return '';\n\n  // Supprimer tous les caractères non numériques en une seule passe\n  var cleaned = input.replace(/\\D/g, '');\n  if (!cleaned) return '';\n\n  // Optimisation: vérifier d'abord si déjà au bon format\n  if (WHATSAPP_REGEX.test(cleaned)) {\n    return cleaned;\n  }\n\n  // Si le numéro commence par 0, le remplacer par 216\n  if (cleaned.charAt(0) === '0') {\n    cleaned = TUNISIA_PREFIX + cleaned.substring(1);\n  }\n  // Si le numéro ne commence pas par 216, l'ajouter\n  else if (!cleaned.startsWith(TUNISIA_PREFIX)) {\n    cleaned = TUNISIA_PREFIX + cleaned;\n  }\n\n  // Vérification finale avec regex\n  return WHATSAPP_REGEX.test(cleaned) ? cleaned : null;\n}\n\n// WhatsApp number validation\nfunction validateWhatsApp(phoneNumber) {\n  // Remove all non-digit characters\n  var cleaned = phoneNumber.replace(/\\D/g, '');\n\n  // Check if it's a valid length (8-15 digits)\n  if (cleaned.length < 8 || cleaned.length > 15) {\n    return false;\n  }\n  return true;\n}\n\n// Format WhatsApp number\nfunction formatWhatsApp(phoneNumber) {\n  var cleaned = phoneNumber.replace(/\\D/g, '');\n\n  // Add country code if not present\n  if (!cleaned.startsWith('216') && !cleaned.startsWith('218')) {\n    return '216' + cleaned; // Default to Tunisia\n  }\n  return cleaned;\n}\n\n// Export functions for global use\nwindow.TCASystem = {\n  showLoading: showLoading,\n  hideLoading: hideLoading,\n  confirmDelete: confirmDelete,\n  updateStatus: updateStatus,\n  validateForm: validateForm,\n  validateWhatsApp: validateWhatsApp,\n  formatWhatsApp: formatWhatsApp,\n  validateAndFormatWhatsApp: validateAndFormatWhatsApp\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/js/custom.js\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/custom.js"]();
/******/ 	
/******/ })()
;