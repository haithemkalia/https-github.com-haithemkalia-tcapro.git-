// Import and initialize Vercel Speed Insights
import { injectSpeedInsights } from '@vercel/speed-insights';

// Initialize Speed Insights
injectSpeedInsights();

function showLoading() { document.getElementById('loadingOverlay').style.display = 'block'; document.getElementById('loadingSpinner').style.display = 'block'; } function hideLoading() { document.getElementById('loadingOverlay').style.display = 'none'; document.getElementById('loadingSpinner').style.display = 'none'; } document.addEventListener('DOMContentLoaded', function() { const alerts = document.querySelectorAll('.alert'); alerts.forEach(function(alert) { setTimeout(function() { if (typeof bootstrap !== 'undefined') { const bsAlert = new bootstrap.Alert(alert); bsAlert.close(); } }, 5000); }); const contentArea = document.querySelector('.content-area'); if (contentArea) { contentArea.classList.add('fade-in-up'); } }); function confirmDelete(message) { return confirm(message || 'هل أنت متأكد من الحذف؟'); } let updateStatusInProgress = false; function updateStatus(clientId, newStatus) { if (!clientId || !newStatus) { console.error('❌ ID client ou statut manquant'); return; } if (updateStatusInProgress) { console.warn('⚠️ Mise à jour en cours, veuillez patienter'); return; } updateStatusInProgress = true; showLoading(); const controller = new AbortController(); const timeoutId = setTimeout(() => controller.abort(), 10000); fetch('/api/update-status', { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify({ client_id: clientId, status: newStatus }), signal: controller.signal }) .then(response => { clearTimeout(timeoutId); if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } return response.json(); }) .then(data => { updateStatusInProgress = false; hideLoading(); if (data.success) { const statusElement = document.querySelector(`[data-client-id="${clientId}"] .status-badge`); if (statusElement) { statusElement.textContent = newStatus; statusElement.className = `btn status-badge status-${newStatus.replace(' ', '-')} dropdown-toggle`; } showAlert('تم تحديث الحالة بنجاح! ✅', 'success'); } else { showAlert('خطأ في تحديث الحالة: ' + (data.message || 'خطأ غير معروف'), 'error'); } }) .catch(error => { updateStatusInProgress = false; hideLoading(); if (error.name === 'AbortError') { showAlert('انتهت مهلة الطلب، يرجى المحاولة مرة أخرى', 'error'); } else { console.error('❌ Erreur lors de la mise à jour:', error); showAlert('خطأ في الاتصال بالخادم', 'error'); } }); } function validateForm(formId) { const form = document.getElementById(formId); if (!form) return false; const requiredFields = form.querySelectorAll('[required]'); let isValid = true; requiredFields.forEach(field => { if (!field.value.trim()) { field.classList.add('is-invalid'); isValid = false; } else { field.classList.remove('is-invalid'); } }); return isValid; } const WHATSAPP_REGEX = /^216\d{8}$/; const TUNISIA_PREFIX = '216'; function validateAndFormatWhatsApp(input) { if (!input || typeof input !== 'string') return ''; let cleaned = input.replace(/\D/g, ''); if (!cleaned) return ''; if (WHATSAPP_REGEX.test(cleaned)) { return cleaned; } if (cleaned.charAt(0) === '0') { cleaned = TUNISIA_PREFIX + cleaned.substring(1); } else if (!cleaned.startsWith(TUNISIA_PREFIX)) { cleaned = TUNISIA_PREFIX + cleaned; } return WHATSAPP_REGEX.test(cleaned) ? cleaned : null; } function validateWhatsApp(phoneNumber) { const cleaned = phoneNumber.replace(/\D/g, ''); if (cleaned.length < 8 || cleaned.length > 15) { return false; } return true; } function formatWhatsApp(phoneNumber) { const cleaned = phoneNumber.replace(/\D/g, ''); if (!cleaned.startsWith('216') && !cleaned.startsWith('218')) { return '216' + cleaned; } return cleaned; } window.TCASystem = { showLoading, hideLoading, confirmDelete, updateStatus, validateForm, validateWhatsApp, formatWhatsApp, validateAndFormatWhatsApp };